import{y as q,z as i,o as l,c as d,h as p,v as h,a as t,G as v,H as f,s as y,I as _,t as m,K as E,g as I,L as N,M as S,N as D}from"./index-57494e9f.js";const U={key:0},b=t("h1",null,"Edit",-1),B=t("p",null,"New username:",-1),C=t("p",null,"New Description: ",-1),V=t("br",null,null,-1),A={key:1},M=t("p",null,"Saving changes...",-1),P=t("div",{class:"spinner"},null,-1),z=[M,P],G={__name:"EditComponent",setup(g){const e=q().currentUser,a=i((e==null?void 0:e.displayName)||null),n=i(""),u=i(!1);e&&(async()=>{const c=v(y(_,"accounts"),f("UID","==",e.uid));(await m(c)).forEach(s=>{n.value=s.data().description})})();const x=async()=>{if(e)if(a.value&&n.value){try{u.value=!0,await E(e,{displayName:a.value}),console.log(e)}catch(r){console.error(r)}const c=v(y(_,"accounts"),f("UID","==",e.uid)),s=(await m(c)).docs[0].id,k=I(_,"accounts",s);try{await N(k,{description:n.value}),console.log("Description updated successfully"),u.value=!0,S.push("/account")}catch(r){console.error(r)}}else console.error("Username and description cannot be empty")};return(c,o)=>(l(),d("div",null,[u.value?(l(),d("div",A,z)):(l(),d("div",U,[b,B,p(t("input",{type:"text","onUpdate:modelValue":o[0]||(o[0]=s=>a.value=s)},null,512),[[h,a.value]]),C,p(t("textarea",{cols:"40",rows:"5","onUpdate:modelValue":o[1]||(o[1]=s=>n.value=s)},null,512),[[h,n.value]]),V,t("button",{onClick:x},"Save changes")]))]))}},L={__name:"EditProfileView",setup(g){return(w,e)=>(l(),D(G))}};export{L as default};
